const fs = require('fs');
const _ = require('lodash');
const beautify = require('js-beautify').js_beautify;

const note = `
  /***
    note! this file is automatically generated!
    please don't edit this file!
  ***/
`

const baseParam = data => {
  const first = data.split('>')[1]
  const optimization = first.split('<')[0]
  const separate = optimization.split('\x20')
  if(separate.length === 2) {
    return {
      code: separate[0],
      color: separate[1],
      level: 0,
      type: 'normal'
    }
  }
  return {
    code: separate[0],
    color: separate[1],
    type: separate[2].split('-')[0],
    level: Number(separate[2].split('-')[1])
  }
}

const read = filePath => {
  fs.readFile(filePath, 'utf8', (err, dom) => {
    const box = dom.split(/\r\n|\r|\n/);
    const dataBox = []
    box.map(item => {
      const data = _.trim(item);
      if(!_.isEmpty(data)) {
        if(data.includes('#')) {
          dataBox.push(baseParam(data))
        }
      }
    })
    const init = dataBox.map((item, i) => {
      const merge = Object.assign({}, item, {id: i + 1});
      return merge
    })
    const normalize = JSON.stringify(init)
    const render = `
      ${note}
      const colors = ${normalize}
      export default colors;
    `
    fs.readFile('foo.js', 'utf8', (err, data) => {
      fs.writeFileSync('node/color.js', beautify(render, { indent_size: 2 }), ['utf-8'])
    });
  })
};

read('./node/dom.js')